<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="contentsQuery">

    <!-- SELECT -->
    <select id="contentsListByBrand" resultType="map">
        SELECT /* contentsQuery.listByBrand */
            *
        FROM BG_CONTENTS
        WHERE CONTENTS_SERIES_ID IN (
			SELECT
				contents_series_id
			FROM BG_CONTENTS_SERIES
			WHERE 1=1
			AND brand_id = #{ brand_id }
		)
        ORDER BY reg_dt
        <if test="rownum != null">
        LIMIT #{ rownum }, #{ perpage }
        </if>
    </select>
    
    <select id="contentsCountByBrand" resultType="int">
	    SELECT /* contentsQuery.contentsCountByBrand */
	    	COUNT(*)
	    FROM (
	        SELECT 
	            *
	        FROM BG_CONTENTS
	        WHERE CONTENTS_SERIES_ID IN (
				SELECT
					contents_series_id
				FROM BG_CONTENTS_SERIES
				WHERE 1=1
				AND brand_id = #{ brand_id }
			)
	    ) TBL
    </select>
    
    <select id="contentsListBySeries" resultType="map">
        SELECT /* contentsQuery.contentsListBySeries */
            *
        FROM BG_CONTENTS
        WHERE contents_series_id = #{ contents_series_id }
        ORDER BY reg_dt
        <if test="rownum != null">
        LIMIT #{ rownum }, #{ perpage }
        </if>
    </select>

    <select id="contentsCountBySeries" resultType="int">
	    SELECT /* contentsQuery.contentsCountBySeries */
	    	COUNT(*)
	    FROM (
	        SELECT
	            *
	        FROM BG_CONTENTS
	        WHERE contents_series_id = #{ contents_series_id }
	    ) TBL
    </select>

    <select id="contentsListByCate" resultType="map">
        SELECT /* contentsQuery.contentsListByCate */
            BC.CONTENTS_ID
            , BC.CONTENTS_SERIES_ID
            , BC.SRC_PATH
            , BC.IMG_PATH
            , BC.PREFIX_URL
            , BC.MOVIE_SIZE
            , BC.MOVIE_RESOLUTION
            , BC.MOVIE_WIDTH
            , BC.MOVIE_HEIGHT
            , BCD.CONTENTS_NM
            , BCD.CONTENTS_DESC
            , BCD.LOCATION_CODE
            , BCD.REG_DT
        FROM BG_CONTENTS BC, BG_CATE_CONTENTS_RELATIONSHIPS BCCR, BG_CONTENTS_DETAIL BCD
        WHERE 1=1
        AND BC.CONTENTS_ID = BCD.CONTENTS_ID
        AND BCD.IDX = BCCR.CONTENTS_DETAIL_IDX 
        AND BCCR.CATE_ID = #{ cate_id } 
        ORDER BY BC.REG_DT
        <if test="rownum != null">
        LIMIT #{ rownum }, #{ perpage }
        </if>
    </select>

    <select id="contentsCountByCate" resultType="int">
	    SELECT /* contentsQuery.contentsCountByCate */
	    	COUNT(*)
	    FROM (
	        SELECT
	            BC.CONTENTS_ID
	            , BC.CONTENTS_SERIES_ID
	            , BC.SRC_PATH
	            , BC.IMG_PATH
	            , BC.PREFIX_URL
	            , BC.MOVIE_SIZE
	            , BC.MOVIE_RESOLUTION
	            , BC.MOVIE_WIDTH
	            , BC.MOVIE_HEIGHT
	            , BCD.CONTENTS_NM
	            , BCD.CONTENTS_DESC
	            , BCD.LOCATION_CODE
	            , BCD.REG_DT
	        FROM BG_CONTENTS BC, BG_CATE_CONTENTS_RELATIONSHIPS BCCR, BG_CONTENTS_DETAIL BCD
	        WHERE 1=1
	        AND BC.CONTENTS_ID = BCD.CONTENTS_ID
	        AND BCD.IDX = BCCR.CONTENTS_DETAIL_IDX 
	        AND BCCR.CATE_ID = #{ cate_id } 
	    ) TBL
    </select>
    
    <select id="movieUrlByContentsId" resultType="String">
        SELECT
            CONCAT(PREFIX_URL, SRC_PATH)
        FROM BG_CONTENTS
        WHERE 1=1
        AND CONTENTS_ID = #{contentsId}
    </select>

    <select id="detail" resultType="map">
        SELECT /* contentsQuery.detail */
            BC.IMG_PATH
            , BC.SRC_PATH
            , BC.PREFIX_URL
            , BCD.*
        FROM BG_CONTENTS BC, BG_CONTENTS_DETAIL BCD        
        WHERE 1=1
        AND BC.CONTENTS_ID = BCD.CONTENTS_ID
        AND BCD.LOCATION_CODE = 'LOC001'
        AND BC.CONTENTS_ID = #{ contents_id }
    </select>
    
    <select id="contentsCount" resultType="int" parameterType="hashmap">
    SELECT /* contentsQuery.count */
        count(*)
    FROM
    (
        SELECT
            BG_BOARD_CONTENTS.*
        FROM
            BG_BOARD_CONTENTS, BG_BOARD_MASTER
        WHERE 
            BG_BOARD_MASTER.board_id = #{ board_id }
        AND
            BG_BOARD_CONTENTS.board_id = BG_BOARD_MASTER.board_id
    ) TMP
    </select>
    
    <select id="brandList" resultType="map">
        SELECT /* contentsQuery.brandList */
            *
        FROM BG_BRAND
        ORDER BY BRAND_NM
    </select>
    
    <select id="brandDetail" resultType="map">
        SELECT /* contentsQuery.brandDetail */
            *
        FROM BG_BRAND
        WHERE brand_id = #{ brand_id }
        AND DEL_YN = 'N'
    </select>
    
    <select id="categoryList" resultType="map">
        SELECT /* contentsQuery.categoryList */
            *
        FROM BG_CATE
        ORDER BY ORDERING_NO
    </select>
    
    <select id="seriesDetail" resultType="map">
        SELECT /* contentsQuery.seriesDetail */
            *
        FROM BG_CONTENTS_SERIES
        WHERE CONTENTS_SERIES_ID = #{ contents_series_id }
    </select>
    
    <select id="cateDetail" resultType="map">
        SELECT /* contentsQuery.cateDetail */
            *
        FROM BG_CATE
        WHERE CATE_ID = #{ cate_id }
    </select>

    <select id="seriesListByBrand" resultType="map">
        SELECT /* contentsQuery.seriesListByBrand */
            *
        FROM BG_CONTENTS_SERIES
		WHERE 1=1
		AND BRAND_ID = #{ brand_id }
    </select>

    <select id="seriesListByCategory" resultType="map">
		SELECT /* contentsQuery.seriesListByCategory */ 
			B.CONTENTS_SERIES_ID,
			B.CONTENTS_SERIES_NM,
			B.SERIES_DESC,
			B.BRAND_ID,
			B.IMG_PATH
		FROM BG_CATE_SERIES_RELATIONSHIPS A, BG_CONTENTS_SERIES B
		WHERE 1=1 
		AND A.CATE_ID = #{ cate_id }
		AND A.USE_YN = 'Y'
		AND A.CONTENTS_SERIES_ID = B.CONTENTS_SERIES_ID 
    </select>
    
    <select id="listByArr" resultType="map">
		SELECT /* contentsQuery.seriesListByCategory */ 
			*
		FROM BG_CONTENTS
		WHERE CONTENTS_ID IN 
			<foreach collection="list" item="contentsId" index="index" open="(" close=")" separator=",">
					#{contentsId}				
			</foreach>
    </select>
    
    
    <!-- Play Log  -->
    <insert id="addPlayLog">
        INSERT BG_PLAY_LOG 
        	(
    	    	MEMBER_IDX
    	    	, CONTENTS_ID
    	    	, YEAR
    	    	, MONTH
    	    	, DAY
	        )
        VALUES
	        (
	        	#{member_idx}
	        	, #{contents_id}
	       		, (select year(now()))
	       		, (select month(now()))
	       		, (select day(now()))
	      	)
    </insert>
    
    
    <insert id="savePlayHistory">
    	INSERT INTO BG_PLAY_LOG(
    		MEMBER_ID
    		,CONTENTS_ID
    		,CHILDREN_IDX
    	) VALUES(
    		#{MEMBER_ID}
    		,#{contents_id}
    		,(SELECT IDX FROM BG_CHILDREN WHERE 1=1 AND PARENT_MEMBER_ID = #{MEMBER_ID} AND SELECTED_YN = 'Y' LIMIT 1)
    	)
    </insert>
    
    <select id="playHistory" resultType="hashmap">
    	SELECT /* contentsQuery.playHistory */
            BC.CONTENTS_ID
            , BC.CONTENTS_SERIES_ID
            , BC.SRC_PATH
            , BC.IMG_PATH
            , BC.PREFIX_URL
            , BC.MOVIE_SIZE
            , BC.MOVIE_RESOLUTION
            , BC.MOVIE_WIDTH
            , BC.MOVIE_HEIGHT
            , BCD.CONTENTS_NM
            , BCD.CONTENTS_DESC
            , BCD.LOCATION_CODE
            , BCD.REG_DT
        FROM BG_CONTENTS BC, BG_CATE_CONTENTS_RELATIONSHIPS BCCR, BG_CONTENTS_DETAIL BCD, BG_PLAY_LOG BPL
        WHERE 1=1
        AND BC.CONTENTS_ID = BCD.CONTENTS_ID
        AND BPL.CONTENTS_ID = BC.CONTENTS_ID
        AND BCD.IDX = BCCR.CONTENTS_DETAIL_IDX 
        AND BPL.MEMBER_ID = #{member_id}
        AND BPL.CHILDREN_IDX = #{children_idx}
        GROUP BY BPL.CONTENTS_ID
        ORDER BY BPL.REG_DT DESC
    </select>
    
    <select id="childPlayCountBySubject" resultType="hashmap">
    	SELECT /* contentsQuery.childPlayCountBySubject */
            BCA.CATE_ID
            , BCA.CATE_NM
            , COUNT(BPL.CONTENTS_ID) AS PLAY_COUNT
        FROM 
        	BG_CONTENTS BC, 
        	BG_CATE_CONTENTS_RELATIONSHIPS BCCR, 
        	BG_PLAY_LOG BPL, 
        	BG_CATE BCA
        WHERE 1=1
        AND BPL.CONTENTS_ID = BC.CONTENTS_ID
        AND BCA.CATE_ID = BCCR.CATE_ID
        AND BPL.MEMBER_ID = #{member_id}
        AND BPL.CHILDREN_IDX = #{children_idx}
        GROUP BY BCCR.CATE_ID
    </select>
    
    <select id="childPlayCountByRegDT" resultType="hashmap">
    	SELECT /* contentsQuery.childPlayCountByRegDT */
            COUNT(BPL.CONTENTS_ID) AS PLAY_COUNT
            , DATE_FORMAT(BPL.REG_DT , '%Y-%m-%d') AS REG_DT
        FROM 
        	BG_PLAY_LOG BPL 
        WHERE 1=1
        AND BPL.MEMBER_ID = #{member_id}
        AND BPL.CHILDREN_IDX = #{children_idx}
        GROUP BY DATE_FORMAT(BPL.REG_DT , '%Y-%m-%d') 
    </select>
    
    <select id="childPlayCountBySeries" resultType="hashmap">
    	SELECT /* contentsQuery.childPlayCountBySeries */
            BCS.CONTENTS_SERIES_ID
            , BCS.CONTENTS_SERIES_NM
            , COUNT(BPL.CONTENTS_ID) AS PLAY_COUNT
        FROM 
        	BG_CONTENTS BC, 
        	BG_PLAY_LOG BPL, 
        	BG_CONTENTS_SERIES BCS
        WHERE 1=1
        AND BPL.CONTENTS_ID = BC.CONTENTS_ID
        AND BCS.CONTENTS_SERIES_ID = BC.CONTENTS_SERIES_ID
        AND BPL.MEMBER_ID = #{member_id}
        AND BPL.CHILDREN_IDX = #{children_idx}
        GROUP BY BCS.CONTENTS_SERIES_ID
    </select>
    
    
</mapper>
